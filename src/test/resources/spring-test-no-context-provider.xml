<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.2.xsd  
       	http://www.springframework.org/schema/aop
       	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       	http://www.springframework.org/schema/jdbc
       	http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
       	http://www.springframework.org/schema/tx
       	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:component-scan base-package="indi.mybatis.flying.*" />

	<bean id="dataSource1" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="testdb" />
		<property name="xaDataSourceClassName" value="org.h2.jdbcx.JdbcDataSource" />
		<property name="xaProperties">
			<props>
				<prop key="user">sa</prop>
				<prop key="password"></prop>
				<prop key="URL">jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
				</prop>
			</props>
		</property>
		<property name="minPoolSize" value="1" />
		<property name="maxPoolSize" value="3" />
		<property name="maxIdleTime" value="60" />
	</bean>
	<bean id="smartDataSource1"
		class="org.springframework.jdbc.datasource.SingleConnectionDataSource"
		init-method="initConnection" destroy-method="closeConnection">
		<property name="driverClassName" value="org.h2.jdbcx.JdbcDataSource" />
		<property name="url"
			value="jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE"></property>
		<property name="username" value="sa"></property>
		<property name="password" value=""></property>
	</bean>
	<!-- 测试环境下初始化dataSource1表结构 -->
	<jdbc:initialize-database data-source="dataSource1"
		ignore-failures="ALL">
		<jdbc:script location="classpath:/INIT_TABLE.sql"
			encoding="UTF-8" />
	</jdbc:initialize-database>

	<bean id="dataSource2" class="com.atomikos.jdbc.AtomikosDataSourceBean"
		init-method="init" destroy-method="close">
		<property name="uniqueResourceName" value="testdb2" />
		<property name="xaDataSourceClassName" value="org.h2.jdbcx.JdbcDataSource" />
		<property name="xaProperties">
			<props>
				<prop key="user">sa</prop>
				<prop key="password"></prop>
				<prop key="URL">jdbc:h2:mem:testdb2;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
				</prop>
			</props>
		</property>
		<property name="minPoolSize" value="1" />
		<property name="maxPoolSize" value="3" />
		<property name="maxIdleTime" value="60" />
	</bean>
	<bean id="smartDataSource2"
		class="org.springframework.jdbc.datasource.SingleConnectionDataSource"
		init-method="initConnection" destroy-method="closeConnection">
		<property name="driverClassName" value="org.h2.jdbcx.JdbcDataSource" />
		<property name="url"
			value="jdbc:h2:mem:testdb2;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE"></property>
		<property name="username" value="sa"></property>
		<property name="password" value=""></property>
	</bean>
	<!-- 测试环境下初始化dataSource2表结构 -->
	<jdbc:initialize-database data-source="dataSource2"
		ignore-failures="ALL">
		<jdbc:script location="classpath:/INIT_TABLE2.sql"
			encoding="UTF-8" />
	</jdbc:initialize-database>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:Configuration.xml" />
		<property name="dataSource" ref="dataSource1" />
		<property name="mapperLocations" value="classpath:indi/mybatis/flying/mapper*/*.xml" />
		<property name="typeAliasesPackage" value="indi.mybatis.flying" />
	</bean>
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:Configuration.xml" />
		<property name="dataSource" ref="dataSource2" />
		<property name="mapperLocations" value="classpath:indi/mybatis/flying/mapper*/*.xml" />
		<property name="typeAliasesPackage" value="indi.mybatis.flying" />
	</bean>
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="indi.mybatis.flying.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	<bean id="mapperScannerConfigurer2" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="indi.mybatis.flying.mapper2" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory2" />
	</bean>

	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
		init-method="init" destroy-method="close">
		<property name="forceShutdown">
			<value>true</value>
		</property>
	</bean>
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="300" />
	</bean>
	<bean id="springTransactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
		<property name="allowCustomIsolationLevels" value="true" />
	</bean>
	<tx:annotation-driven transaction-manager="springTransactionManager" />
	<bean id="distributedSnowflakeKeyGenerator"
		class="indi.mybatis.flying.keyHandler.DistributedSnowflakeKeyGenerator">
		<property name="workerId" value="5" />
		<property name="datacenterId" value="5" />
	</bean>

</beans>